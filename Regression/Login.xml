<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="2c846263-a870-4416-a66b-9aa215a3c1d9" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Login" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="IncludeOverview">true</con:setting>
    <con:setting id="IncludeResults">true</con:setting>
    <con:setting id="FlowLayout">false</con:setting>
    <con:setting id="ErrorDetails">true</con:setting>
    <con:setting id="IncludeCoverage">true</con:setting>
    <con:setting id="2c846263-a870-4416-a66b-9aa215a3c1d9fileName">Login</con:setting>
  </con:settings>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:testStep type="groovy" name="NotToAbortOnError" id="3337bfe5-16e9-4d14-b66a-c437b9e5db6f">
    <con:settings/>
    <con:config>
      <script>testRunner.testCase.testSuite.project.getTestSuiteList().each
{
   it.getTestCaseList().each
   {
      //Switch the parameter value to 'true' if you need to enable 'Abort on Error' option
      it.setFailOnError(false)
   }
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Login" id="5adc0a35-c101-4761-b9d2-b74da6b42b4a">
    <con:settings/>
    <con:config service="XS1 API" resourcePath="/xs1/login" methodName="login" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="Login" id="19c8389d-329a-4f2b-879f-ad35fe23942c" mediaType="application/x-www-form-urlencoded" postQueryString="true">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="timezone-offset" value="-7" xmlns="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:endpoint>${#Project#endpoint}</con:endpoint>
        <con:request/>
        <con:originalUri>https://xs1qa2.xypro.com/xs1/login</con:originalUri>
        <con:assertion type="JsonPath Match" id="75fc935a-dfe4-4f6e-9029-a1939d6e560f" name="Login = true">
          <con:configuration>
            <path>$['login']</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="c331986e-69e1-4678-8faa-f778df0d8cdc" name="userName = xs1apiregression">
          <con:configuration>
            <path>$['userName']</path>
            <content>xs1apiregression</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="password" value="${#Project#password}"/>
          <con:entry key="username" value="${#Project#username}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>username</con:entry>
          <con:entry>password</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="777bd7d4-187a-4b65-ad53-e609ad31b3f5">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="0d012796-e8d5-4398-9893-f92506140f2e">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="e550e552-e905-4719-99f4-a0c68e2f48d8">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="b0ce29d2-283a-41b3-afc3-a97507050086">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="375b6235-a7ab-438f-82f7-e243e92b9dd0">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="1acccb02-b4b7-4e89-ae4b-e82d2719f308">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="setTokenAndCookie" id="ad7e6ae4-67b4-47ed-9837-58e1fb02e882">
    <con:settings/>
    <con:config>
      <script>def val = testRunner.testCase.testSteps['Login'].testRequest.response.getResponseHeaders()
loggedInValue = "true"

Map&lt;String,List> values  = new HashMap&lt;String,String>();

for(int j = 0; j &lt; val.get("Set-Cookie").size(); j++)
{
	
	def cjar = val.get("Set-Cookie")[j]
	def cookies = cjar.tokenize("\\;")
	
	cookies.each() 
	{ cookie ->
    	def pair = cookie.tokenize("\\=")
    	values.put(pair[0], pair[1])
    
    		log.info( "Key: " + pair[0] + ", Val: " + pair[1] )
	}
}

		values.keySet()
		if (values.get("SESSION") == null)
		{
			loggedInValue = "false"
		}
		log.info("LOGGED IN: " + loggedInValue)
		testRunner.testCase.testSuite.project.setPropertyValue("loggedIn", loggedInValue)
		testRunner.testCase.testSuite.project.setPropertyValue( 'token', values.get("XSRF-TOKEN"))
		testRunner.testCase.testSuite.project.setPropertyValue( 'cookie', "SESSION="+values.get("SESSION" ))

		//Generate TransactionID
		//def random = (int)(Math.random()*1000);
          //testRunner.testCase.testSuite.project.setPropertyValue("RandomID", String.valueOf((int)(Math.random()*100000)) );</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Logout" id="21939f95-6098-47f5-8f12-86808205b8c3">
    <con:settings/>
    <con:config service="XS1 API" resourcePath="/xs1/logout" methodName="logout" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="Logout" id="19c8389d-329a-4f2b-879f-ad35fe23942c" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>${#Project#endpoint}</con:endpoint>
        <con:request/>
        <con:originalUri>https://xs1qa2.xypro.com/xs1/login</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="1ee1c108-2e0d-4880-857a-396552f3d597" name="Valid HTTP Status Code = 200">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="Cookie" value="${#Project#cookie}"/>
          <con:entry key="X-XSRF-TOKEN" value="${#Project#token}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>X-XSRF-TOKEN</con:entry>
          <con:entry>Cookie</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="777bd7d4-187a-4b65-ad53-e609ad31b3f5">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="0d012796-e8d5-4398-9893-f92506140f2e">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="e550e552-e905-4719-99f4-a0c68e2f48d8">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="b0ce29d2-283a-41b3-afc3-a97507050086">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="375b6235-a7ab-438f-82f7-e243e92b9dd0">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="1acccb02-b4b7-4e89-ae4b-e82d2719f308">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="outputTimesToExcel" id="dcb762d7-f353-4c12-ae37-42436cefaf10" disabled="true">
    <con:settings/>
    <con:config>
      <script><![CDATA[import groovy. json.*
import java.io.*;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import java.util.Iterator;

		def projectDirectory = context.expand('${projectDir}')
		def fileName = projectDirectory + testRunner.testCase.testSuite.project.getPropertyValue("reportsFilename")
          log.info(fileName)

		File file = new File(fileName)
		
		FileInputStream fsIP= new FileInputStream(file); //Read the spreadsheet that needs to be updated
          HSSFWorkbook wb = new HSSFWorkbook(fsIP); //Access the workbook
          HSSFSheet worksheet = wb.getSheetAt(0); //Access the worksheet, so that we can update / modify it.

		String[] steps = ["Login"];

		//get all steps from Excel
          HashMap<String,Integer> stepsMap=new HashMap<String,Integer>();  
          for(int i = 1; i <= worksheet.getLastRowNum() ; i++){
          	HSSFRow row = worksheet.getRow(i);
			cell = row.getCell(0);
			def stepName = cell.toString();
               stepsMap.put(stepName,i);  
		}
	
		Cell cell = null; // declare a Cell object
		for(int i = 0; i < steps.length; i++){
			def currentStepName = steps[i];
			currentStepIndex = stepsMap.get(currentStepName);
			if (currentStepIndex!=null){
				def currentTestStep = testRunner.testCase.testSteps[currentStepName];
				if (currentTestStep == null){
					log.info("NOT FOUND PROJECT STEP " + currentStepName.toString());
				}
				else{
					def currentTestStepResponse = currentTestStep.testRequest.response;
					if (currentStepIndex != null && currentTestStepResponse != null){
						def response = currentTestStep.testRequest.response.timeTaken;
						log.info(response)
						HSSFRow row = worksheet.getRow(currentStepIndex);
						cell = row.getCell(9);
						cell.setCellValue(response);
					}
					else{
						log.info("NOT FOUND TIMETAKEN FOR " + currentStepName.toString());
					}
				}
			}
			else{
				log.info("NOT FOUND STEP IN EXCEL " + currentStepName.toString());
			}
		}
		fsIP.close(); //Close the InputStream
		FileOutputStream output_file =new FileOutputStream(file);  //Open FileOutputStream to write updates
          wb.write(output_file); //write changes
          output_file.close();  //close the stream]]></script>
    </con:config>
  </con:testStep>
  <con:properties>
    <con:property>
      <con:name>token</con:name>
      <con:value>eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBMW9sZ2EiLCJleHAiOjE0OTUwNjM4Njh9.xQl8Ky5Hh1zEHj8zemLX_yLjJtO5_1SLpj1-mtiVr_AfG8JqS5oySRcgY71p4OcSxaHrStpT2CcV-eHlnP0ulA</con:value>
    </con:property>
    <con:property>
      <con:name>Cookie</con:name>
      <con:value>JSESSIONID=9CF4B218E03EEF96A3F6FAC281BA6823;</con:value>
    </con:property>
  </con:properties>
  <con:reportScript>def request = context.expand( '${Login#Request}' )</con:reportScript>
  <con:reportParameters/>
  <con:breakPoints>
    <con:testStepId>ad1371db-7f8d-4dd7-aa33-b907cc789097</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>65a735ad-e103-496a-8df2-5280cf5bd7f5</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>5fb7a9c8-4d45-4f09-b190-57fdbea06bfc</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>fe86449c-819b-4361-a2f7-1cf283903a3e</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>1d86c922-2fb5-40ae-9383-843c2fa95b6f</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>6f25bf45-f65a-4168-bbbd-f37bd690f2f4</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>5adc0a35-c101-4761-b9d2-b74da6b42b4a</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>3337bfe5-16e9-4d14-b66a-c437b9e5db6f</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>ad7e6ae4-67b4-47ed-9837-58e1fb02e882</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>dcb762d7-f353-4c12-ae37-42436cefaf10</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>21939f95-6098-47f5-8f12-86808205b8c3</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:environmentSpec>
    <con:entry environmentId="0d012796-e8d5-4398-9893-f92506140f2e">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
    <con:entry environmentId="e550e552-e905-4719-99f4-a0c68e2f48d8">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
    <con:entry environmentId="375b6235-a7ab-438f-82f7-e243e92b9dd0">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
    <con:entry environmentId="1acccb02-b4b7-4e89-ae4b-e82d2719f308">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
  </con:environmentSpec>
</con:testCase>
